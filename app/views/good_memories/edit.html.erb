<% if @good_memory.errors.any? %>
    <div class="error">
        <h2>以下のエラーがあります：</h2>
        <ul>
            <% @good_memory.errors.full_messages.each do |message| %>
                <li><%= message %></li>
            <% end %>
        </ul>
    </div>
<% end %>

<div class="card">
    <h2>思い出を編集</h2>
    <p style="text-align: center; color: #8b5a8c; margin-bottom: 20px;"><%= @good_memory.date.strftime("%Y年%m月%d日") %>の思い出を編集します</p>
    
    <%= form_with model: @good_memory, local: true, class: "form" do |form| %>
        <div class="form-group">
            <%= form.label :date, "日付:" %>
            <%= form.date_field :date, required: true %>
        </div>
        
        <div class="form-group">
            <%= form.label :content, "良かったこと:" %>
            <%= form.text_area :content, rows: 4, 
                          placeholder: "今日あった良いことを書いてみましょう。小さなことでも大丈夫です♪", 
                          required: true %>
        </div>
        
        <div class="form-group">
            <%= form.label :mood, "気分:" %>
            <div class="mood-selector">
                <% GoodMemory.moods.each do |mood, value| %>
                    <div class="mood-option">
                        <%= form.radio_button :mood, mood, class: "mood-radio" %>
                        <%= form.label "mood_#{mood}", class: "mood-label" do %>
                            <span class="mood-emoji"><%= GoodMemory.new(mood: mood).mood_emoji %></span>
                            <span class="mood-text"><%= GoodMemory.new(mood: mood).mood_text %></span>
                        <% end %>
                    </div>
                <% end %>
            </div>
        </div>
        
        <%= form.submit "更新する", class: "btn" %>
    <% end %>
</div>

<div class="nav-links">
    <%= link_to "← 詳細に戻る", @good_memory %>
    <%= link_to "← ホームに戻る", root_path %>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const moodRadios = document.querySelectorAll('input[name="good_memory[mood]"]');
  const moodTargets = document.querySelectorAll('[data-mood-target]');

  moodRadios.forEach(radio => {
    radio.addEventListener('change', function() {
      // すべてのターゲットから選択状態を削除
      moodTargets.forEach(target => {
        target.classList.remove('border-pink-500', 'bg-pink-50');
        target.classList.add('border-gray-200');
      });

      // 選択されたターゲットに選択状態を追加
      if (this.checked) {
        const target = this.nextElementSibling.querySelector('[data-mood-target]');
        target.classList.remove('border-gray-200');
        target.classList.add('border-pink-500', 'bg-pink-50');
      }
    });
  });
});
</script>
